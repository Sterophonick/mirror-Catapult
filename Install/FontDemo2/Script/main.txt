;
; *** FontDemo II ***
;
; Catapult rendered font demo. Requires Catapult v1.40b or later.
; Demonstrates the differences between tiles and rendered fonts.
;
; The font tiles were generated using the 'Font Processor' tool from within Catapult.
; The FontMap used is also automatically generated by the font processor.
;
; The 'Font Processor' tool can generate 'rendered' fonts (i.e. where each letter may
; have a different size ).
;
; The FontMap editor has an automated facility to calculate the pixel size of each letter in the font.
;
;
; Controls:
;
; Press 'A' (GBA 'A') to switch between displaying rendered and tiled fonts.
; Press 'S' (GBA 'B') to change the pixel gap for rendered fonts

; =============================================================================================

##MODE_TILED		0
##MODE_RENDERED	1

; spacing between letters
##PIXEL_GAP			2

; =============================================================================================

; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
; Main loop
; 

	; --- switch between font modes?
	If F_IsButtonPressedButtonA == true
		If G_MODE == #MODE_RENDERED
			Call SetFontMode #MODE_TILED
		Else
			Call SetFontMode #MODE_RENDERED
		End
	End

	; --- display mode
	If G_MODE == #MODE_RENDERED
		StringDisplay 1 1 SID_RENDERED
	Else
		StringDisplay 1 1 SID_TILED
	End

	; --- calculate new length of string to display
	G_LENGTH += 1
	V_LV0 StringGetLength SID_FENCE_JUMP
	
	If G_LENGTH > V_LV0
		; reset to start
		G_LENGTH = 0
		TileMapFillRect 0 [all] 0 0 32 32 0
	End

	; --- display some text (part of a complete string)
	StringDisplayPartial 1 4 0 G_LENGTH SID_FENCE_JUMP

	; if multiple rendered text strings are displayed every frame, need to reset tile index
	If G_MODE == #MODE_RENDERED
	
		; --- change pixel gap?
		If F_IsButtonPressedButtonB == true
			G_PIXELGAP += 1
			G_PIXELGAP %= 4		; when it reaches 4, go back to 0
			
			; clear tilemap
			TileMapFillRect 0 [all] 0 0 32 32 0
		End
	
		StringRenderSetTarget 1 false true true #_COL_16 0 0 G_PIXELGAP
	End
	
Return


; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
; Select the passed font mode, and initialise it
; 

Function SetFontMode 1		; 0-New font mode

	If V_EV0 == #MODE_RENDERED
		Call SetupRenderedFonts
		G_MODE = #MODE_RENDERED
	Else
		Call SetupTiledFonts
		G_MODE = #MODE_TILED
	End

Return


; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
; Setup rendered fonts 
; 

Function SetupRenderedFonts 0

	; clear background
	TileMapFillRect 0 [all] 0 0 32 32 0

	; set a rendered font fontmap
	StringDisplaySetTarget 0 FMAP_SMALL_REN 0
	
	; font uses palettes, and uses palette bank 0	 (colours 0..15)
	StringDisplaySetColour true 0
	
	; setup behaviour of rendered fonts
	StringRenderSetTarget 1 false true true #_COL_16 0 0 G_PIXELGAP

Return


; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
; Setup tiled fonts 
; 

Function SetupTiledFonts 0

	; clear background
	TileMapFillRect 0 [all] 0 0 32 32 0

	; set a non-rendered fontmap
	StringDisplaySetTarget 0 FMAP_SMALL_TILED 0

	; font uses palettes, and uses palette bank 0	 (colours 0..15)
	StringDisplaySetColour true 0
	
	; load font tiles into VRAM
	TileDataLoad [bg] RID_TILES_FONTSMALL 1 0
	
Return


; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
; Setup the display. One background layer for the text.
; No sprites.
; 

Function Initialise 0

	; reset display
	DisplaySetAttribute [BlankDisplay] false 
	DisplaySetAttribute [EnableSprite] false
	DisplaySetAttribute [EnableBG0] true
	DisplaySetAttribute [EnableBG1] false
	DisplaySetAttribute [EnableBG2] false
	DisplaySetAttribute [EnableBG3] false
	DisplaySetAttribute [VideoMode] 0
	DisplaySetAttribute [EnableSpriteWindow] false
	DisplaySetAttribute [EnableWindowA] false
	DisplaySetAttribute [EnableWindowB] false

	; setup background 0
	TileMapSetPriority 0 0
	TileMapSetColourMode 0 #_COL_16
	TileMapSetMapBank 0 31
	TileMapSetSize 0 0			; 32x32 tiles

	TileMapSetOffsetX 0 0
	TileMapSetOffsetY 0 0

	; setup font colour
	PaletteSetColour [bg] 1 {20,31,31}

	; set rendered mode initially
	Call SetFontMode #MODE_RENDERED
	
	G_LENGTH = 0
	G_PIXELGAP = #PIXEL_GAP
		
Return


